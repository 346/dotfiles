# rbenv
export PATH="$HOME/.rbenv/shims:$PATH"
eval "$(rbenv init -)"

# docker
export DOCKER_HOST=tcp://

# vagrant-digitalocean
export SSL_CERT_FILE=/usr/local/etc/openssl/cert.pem

# commands
export PATH=/usr/local/bin:$PATH
alias vi='env LANG=ja_JP.UTF-8 /Applications/MacVim.app/Contents/MacOS/Vim "$@"'
alias vim='env LANG=ja_JP.UTF-8 /Applications/MacVim.app/Contents/MacOS/Vim "$@"'
export EDITOR='env LANG=ja_JP.UTF-8 /Applications/MacVim.app/Contents/MacOS/Vim "$@"'
alias find=gfind
alias ll='ls -laFG'
export unodir='/usr/local/share/uno/Packages'

# homebrew
if [ -f `brew --prefix`/etc/bash_completion.d/git-prompt.sh ]; then
  . `brew --prefix`/etc/bash_completion.d/git-prompt.sh
  . `brew --prefix`/etc/bash_completion.d/git-completion.bash
fi

# go
program_exists () {
  type "$1" &> /dev/null ;
}

if program_exists go; then
  function setupGOROOT()
  {
    local GOPATH=`which go`
    local GODIR=`dirname $GOPATH`
    local GOPATH_BREW_RELATIVE=`readlink $GOPATH`
    local GOPATH_BREW=`dirname $GOPATH_BREW_RELATIVE`
    export GOROOT=`cd $GODIR; cd $GOPATH_BREW/..; pwd`
  }
  setupGOROOT
fi
export GOPATH=$HOME/.go
export PATH=$PATH:$GOROOT/bin:$GOPATH/bin

# android ccache
export NDK_CCACHE=/usr/local/bin/ccache
export CCACHE_COMPILERCHECK=content
export CCACHE_MAXSIZE=3G


# environment specific colors
ssh() {
  # Host-specific background colors.
  if [[ "$@" =~ ^pro.* ]]; then
  set_term_bgcolor 127 0 0
  elif [[ "$@" =~ ^stg.* ]]; then
    set_term_bgcolor 0 0 100
  elif [[ "$@" =~ ^dev.* ]]; then
    set_term_bgcolor 0 100 0
  elif [[ "$@" =~ ^dep.* ]]; then
    set_term_bgcolor 127 127 0
  fi
   
  command ssh $@
   
  set_term_bgcolor 0 0 0
}
set_term_bgcolor() {
   local R=$1
   local G=$2
   local B=$3
   # /usr/bin/osascript <<EOF
# tell application "Terminal"
   # tell window 0
      # set the background color to {$(($R*65535/255)), $(($G*65535/255)), $(($B*65535/255))}
   # end tell
# end tell
# EOF
  /usr/bin/osascript <<EOF
tell application "iTerm"
  tell the current terminal
    tell the current session
      set background color to {$(($R*65535/255)), $(($G*65535/255)), $(($B*65535/255))}
    end tell
  end tell
end tell
EOF
}
